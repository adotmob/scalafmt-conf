#!/bin/sh
 
# Checks if locally staged changes are formatted properly.
# Ignores non-staged changes.
# Intended as git pre-commit hook.
 
echo ""
echo "Running pre-commit hook... (you can omit this with --no-verify, but don't)"
 
if [ ! -f build.sbt ]
then
    echo "[WARN] build.sbt does not exist, pre-commit hook is skipped"
    exit 0
fi
 
git diff --quiet
hadNoNonStagedChanges=$?
 
if ! [ $hadNoNonStagedChanges -eq 0 ]
then
    echo "* Stashing non-staged changes so we don't check them"
    git stash --keep-index -u > /dev/null
fi
 
echo "* Checking that scalafmt has been applied to src/main/scala and src/test/scala..."
sbt scalafmtCheck test:scalafmtCheck > /dev/null
scalafmtWasApplied=$?
 
if [ $scalafmtWasApplied -ne 0 ]
then
    echo "  [ERROR] scalafmt was not applied to src/main/scala or src/test/scala"
fi
 
if ! [ $hadNoNonStagedChanges -eq 0 ]
then
    echo "* Applying the stash with the non-staged changes..."
    sleep 1 && git stash pop --index > /dev/null & # sleep because otherwise commit fails when this leads to a merge conflict
fi
 
echo ""
 
if [ $scalafmtWasApplied -eq 0 ]
then
    echo "[OK] Your code is properly formatted"
    exit 0
else
    echo "[ERROR] Cancelling commit because your code isn't formatted"
    echo "[ERROR] Run 'sbt scalafmt test:scalafmt' to make it pass"
    exit 1
fi
